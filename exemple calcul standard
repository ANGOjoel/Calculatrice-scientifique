Partager


Vous avez dit¬†:
Code en C pour trouver une fonction qui affiche le calcul entr√©e
ChatGPT a dit¬†:
ChatGPT
Voici un exemple de code en C qui d√©finit une fonction permettant d‚Äôafficher un calcul entr√© par l'utilisateur sous forme d'une expression arithm√©tique (comme a + b = c) :

c
Copier
Modifier
#include <stdio.h>

void afficherCalcul(int a, char operateur, int b) {
    int resultat;

    // Effectuer le calcul en fonction de l'op√©rateur
    switch (operateur) {
        case '+':
            resultat = a + b;
            break;
        case '-':
            resultat = a - b;
            break;
        case '*':
            resultat = a * b;
            break;
        case '/':
            if (b != 0) {
                resultat = a / b;
            } else {
                printf("Erreur : division par z√©ro.\n");
                return;
            }
            break;
        default:
            printf("Erreur : op√©rateur non pris en charge.\n");
            return;
    }

    // Afficher le calcul et le r√©sultat
    printf("%d %c %d = %d\n", a, operateur, b, resultat);
}

int main() {
    int a, b;
    char operateur;

    // Demander √† l'utilisateur d'entrer le calcul
    printf("Entrez un calcul sous la forme : nombre1 op√©rateur nombre2 (ex : 5 + 3)\n");
    printf("Entr√©e : ");
    scanf("%d %c %d", &a, &operateur, &b);

    // Appeler la fonction pour afficher le calcul
    afficherCalcul(a, operateur, b);

    return 0;
}
Explication du code :
Fonction afficherCalcul :

Cette fonction prend deux nombres entiers (a et b) et un op√©rateur (+, -, *, /).
Elle utilise une structure switch pour effectuer le calcul en fonction de l'op√©rateur.
Gestion des erreurs :

Si un op√©rateur non valide est entr√©, la fonction affiche un message d'erreur.
Une v√©rification est effectu√©e pour √©viter la division par z√©ro.
Interaction utilisateur :

L'utilisateur entre les valeurs via scanf.
Le calcul est ensuite affich√© sous la forme : a op√©rateur b = r√©sultat.
Exemple d'ex√©cution :
plaintext
Copier
Modifier
Entrez un calcul sous la forme : nombre1 op√©rateur nombre2 (ex : 5 + 3)
Entr√©e : 10 / 2
10 / 2 = 5
Tu peux tester ce code dans un environnement de d√©veloppement en C, comme GCC. Si tu souhaites des modifications ou des ajouts, fais-le-moi savoir‚ÄØ! üòä







Vous avez dit¬†:
code c pour l'utilisation de log
ChatGPT a dit¬†:
ChatGPT
Voici un exemple de programme en C qui utilise la fonction logarithme naturel log() et la fonction logarithme en base 10 log10() de la biblioth√®que math√©matique <math.h> :

c
Copier
Modifier
#include <stdio.h>
#include <math.h>

int main() {
    double nombre, log_naturel, log_base10;

    // Demander √† l'utilisateur d'entrer un nombre
    printf("Entrez un nombre positif : ");
    scanf("%lf", &nombre);

    // V√©rifier que le nombre est positif
    if (nombre > 0) {
        // Calculer le logarithme naturel (base e)
        log_naturel = log(nombre);

        // Calculer le logarithme en base 10
        log_base10 = log10(nombre);

        // Afficher les r√©sultats
        printf("Logarithme naturel de %.2f : %.4f\n", nombre, log_naturel);
        printf("Logarithme en base 10 de %.2f : %.4f\n", nombre, log_base10);
    } else {
        printf("Erreur : le nombre doit √™tre strictement positif.\n");
    }

    return 0;
}
Explication du code :
Biblioth√®que <math.h> :

La fonction log() calcule le logarithme naturel (base e).
La fonction log10() calcule le logarithme en base 10.
Validation d'entr√©e :

Le programme v√©rifie que l'utilisateur entre un nombre strictement positif, car les logarithmes ne sont pas d√©finis pour des nombres n√©gatifs ou z√©ro.
Entr√©e utilisateur :

L'utilisateur entre un nombre via scanf.
Affichage des r√©sultats :

Les valeurs des logarithmes sont affich√©es avec 4 chiffres apr√®s la virgule.
Exemple d'ex√©cution :
Cas d'entr√©e valide :
plaintext
Copier
Modifier
Entrez un nombre positif : 10
Logarithme naturel de 10.00 : 2.3026
Logarithme en base 10 de 10.00 : 1.0000
Cas d'entr√©e invalide :
plaintext
Copier
Modifier
Entrez un nombre positif : -5
Erreur : le nombre doit √™tre strictement positif.
Compilation :
Pour compiler ce programme avec GCC, n'oubliez pas d'ajouter l'option -lm pour lier la biblioth√®que math√©matique :

bash
Copier
Modifier
gcc programme.c -o programme -lm
Si tu souhaites d'autres variantes ou ajouts, fais-le-moi savoir ! üòä







Vous avez dit¬†:
code en c pour afficher les resultats d'une calculatrice et de presenter si besoin les erreurs d'entr√©e
ChatGPT a dit¬†:
ChatGPT
Voici un programme en C qui impl√©mente une calculatrice simple avec une gestion des erreurs d'entr√©e, comme la division par z√©ro ou l'utilisation d'op√©rateurs non valides :

c
Copier
Modifier
#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#include <ctype.h>

// Fonction pour effectuer le calcul
void afficherResultat(double a, char operateur, double b) {
    double resultat;
    int erreur = 0;

    // Calcul en fonction de l'op√©rateur
    switch (operateur) {
        case '+':
            resultat = a + b;
            break;
        case '-':
            resultat = a - b;
            break;
        case '*':
            resultat = a * b;
            break;
        case '/':
            if (b != 0) {
                resultat = a / b;
            } else {
                printf("Erreur : division par z√©ro.\n");
                erreur = 1;
            }
            break;
        case '^':
            resultat = pow(a, b);
            break;
        default:
            printf("Erreur : op√©rateur non valide ('%c').\n", operateur);
            erreur = 1;
    }

    // Affichage du r√©sultat si aucune erreur
    if (!erreur) {
        printf("R√©sultat : %.2f %c %.2f = %.2f\n", a, operateur, b, resultat);
    }
}

int main() {
    double a, b;
    char operateur;
    int lectureValide;

    printf("Calculatrice simple\n");
    printf("Entrez une op√©ration sous la forme : nombre1 op√©rateur nombre2 (ex : 5 + 3)\n");

    while (1) {
        printf("\nEntr√©e : ");
        lectureValide = scanf("%lf %c %lf", &a, &operateur, &b);

        // V√©rifier si l'entr√©e est correcte
        if (lectureValide != 3 || !isfinite(a) || !isfinite(b)) {
            printf("Erreur : entr√©e invalide. Veuillez entrer une op√©ration valide.\n");
            // Vider le buffer pour √©viter une boucle infinie
            while (getchar() != '\n');
            continue;
        }

        // Appeler la fonction pour afficher le r√©sultat
        afficherResultat(a, operateur, b);

        // Demander si l'utilisateur veut continuer
        char choix;
        printf("Voulez-vous effectuer un autre calcul ? (o/n) : ");
        scanf(" %c", &choix);
        if (tolower(choix) != 'o') {
            break;
        }
    }

    printf("Merci d'avoir utilis√© la calculatrice !\n");
    return 0;
}
Points importants :
Gestion des erreurs d'entr√©e :

Le programme v√©rifie que l'utilisateur entre trois √©l√©ments valides (nombre1, op√©rateur, nombre2).
En cas d'entr√©e invalide, un message d'erreur est affich√©, et l'utilisateur peut r√©essayer.
Gestion des erreurs sp√©cifiques :

Division par z√©ro (b == 0) : un message d'erreur est affich√©.
Op√©rateur non reconnu : un message indique que l'op√©rateur est invalide.
Caract√©ristiques suppl√©mentaires :

Les op√©rateurs pris en charge sont : +, -, *, /, ^ (exponentiation).
Le programme permet √† l'utilisateur d'effectuer plusieurs calculs en demandant s'il souhaite continuer.
Interaction utilisateur :

L'utilisateur entre une expression comme 5 + 3, et le programme affiche le r√©sultat.
Validation des entr√©es :

Le programme utilise scanf pour lire les entr√©es et v√©rifie leur validit√©.
En cas d'erreur, il vide le buffer pour √©viter les boucles infinies.
Exemple d'ex√©cution :
Cas d'entr√©e valide :
plaintext
Copier
Modifier
Calculatrice simple
Entrez une op√©ration sous la forme : nombre1 op√©rateur nombre2 (ex : 5 + 3)

Entr√©e : 10 ^ 2
R√©sultat : 10.00 ^ 2.00 = 100.00

Voulez-vous effectuer un autre calcul ? (o/n) : o

Entr√©e : 20 / 0
Erreur : division par z√©ro.

Voulez-vous effectuer un autre calcul ? (o/n) : n
Merci d'avoir utilis√© la calculatrice !
Ce programme est extensible et peut √™tre adapt√© pour inclure plus d'op√©rateurs ou fonctionnalit√©s si n√©cessaire. Si tu veux ajouter autre chose, fais-le-moi savoir ! üòä







Vous avez dit¬†:
code en C pour l'utilisation de la fonction math√©matique cotan 
ChatGPT a dit¬†:
ChatGPT
En C, la fonction cotangente (
cot
‚Å°
(
ùë•
)
cot(x)) n'est pas directement disponible dans la biblioth√®que math√©matique standard <math.h>. Cependant, la cotangente peut √™tre calcul√©e en utilisant la formule :

cot
‚Å°
(
ùë•
)
=
1
tan
‚Å°
(
ùë•
)
cot(x)= 
tan(x)
1
‚Äã
 
Voici un exemple de programme en C pour calculer la cotangente d'un angle donn√© en radians tout en g√©rant les cas o√π la tangente est nulle (c'est-√†-dire les points o√π 
cot
‚Å°
(
ùë•
)
cot(x) est ind√©fini) :

c
Copier
Modifier
#include <stdio.h>
#include <math.h>

void calculerCotan(double angle) {
    // V√©rifier si la tangente est nulle
    if (fmod(angle, M_PI) == 0) { // angle est un multiple de œÄ
        printf("Erreur : cotangente ind√©finie pour un multiple de œÄ.\n");
    } else {
        // Calculer la cotangente
        double cotan = 1.0 / tan(angle);
        printf("Cotangente de %.4f radians : %.4f\n", angle, cotan);
    }
}

int main() {
    double angle;

    // Demander √† l'utilisateur d'entrer un angle en radians
    printf("Entrez un angle en radians : ");
    scanf("%lf", &angle);

    // Appeler la fonction pour calculer la cotangente
    calculerCotan(angle);

    return 0;
}
Explications :
Fonction tan :

La biblioth√®que <math.h> fournit la fonction tan() pour calculer la tangente d'un angle en radians.
Cotangente ind√©finie :

La cotangente est ind√©finie lorsque la tangente est nulle, ce qui se produit pour les angles 
ùúã
œÄ, 
2
ùúã
2œÄ, etc. (multiples entiers de 
ùúã
œÄ).
Le programme utilise fmod(angle, M_PI) pour v√©rifier si l'angle est un multiple de 
ùúã
œÄ.
Entr√©e utilisateur :

L'utilisateur entre un angle en radians. Si n√©cessaire, les conversions degr√©s ‚Üî radians peuvent √™tre ajout√©es.
Exemple d'ex√©cution :
Cas normal :
plaintext
Copier
Modifier
Entrez un angle en radians : 0.7854
Cotangente de 0.7854 radians : 1.0000
Cas d'ind√©fini :
plaintext
Copier
Modifier
Entrez un angle en radians : 3.1416
Erreur : cotangente ind√©finie pour un multiple de œÄ.
Remarque :
Si tu veux travailler avec des degr√©s au lieu de radians, ajoute une conversion :

angle¬†en¬†radians
=
angle¬†en¬†degr
e
Àä
s
√ó
ùúã
180
angle¬†en¬†radians=angle¬†en¬†degr 
e
Àä
 s√ó 
180
œÄ
‚Äã
 
Pour l'int√©grer :

c
Copier
Modifier
angle = angle * M_PI / 180.0;
Si tu as besoin de modifications ou d'autres fonctionnalit√©s, fais-moi signe ! üòä







Vous avez dit¬†:
code c pour une calculatrice standard
ChatGPT a dit¬†:
ChatGPT
Voici un code C pour une calculatrice standard qui g√®re les op√©rations de base comme l'addition, la soustraction, la multiplication, la division, ainsi que des fonctions avanc√©es comme la puissance et la racine carr√©e.

Code :
c
Copier
Modifier
